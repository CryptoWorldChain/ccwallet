{"remainingRequest":"/Users/will/Downloads/plugiin/node_modules/thread-loader/dist/cjs.js!/Users/will/Downloads/plugiin/node_modules/babel-loader/lib/index.js!/Users/will/Downloads/plugiin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/will/Downloads/plugiin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Downloads/plugiin/src/views/recover/Recover.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/will/Downloads/plugiin/src/views/recover/Recover.vue","mtime":1574819910000},{"path":"/Users/will/Downloads/plugiin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Downloads/plugiin/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Downloads/plugiin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/will/Downloads/plugiin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Downloads/plugiin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/will/Downloads/plugiin/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/will/Downloads/plugiin/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _vant = require(\"vant\");\n\nvar _create = require(\"@/api/create\");\n\nvar _sign = require(\"@/api/sign\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      mnemonic: '',\n      mnemonicError: '',\n      userName: '',\n      userNameError: '',\n      pwd: '',\n      confirmPwd: '',\n      pwdError: '',\n      confirmPwdError: '',\n      btnDisabled: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    document.onkeyup = function (e) {\n      var key = window.event.keyCode;\n\n      if (key === 13) {\n        if (!_this.btnDisabled) {\n          _this.recover();\n        }\n      }\n    };\n  },\n  methods: {\n    // 助记词验证\n    mnemonicInput: function mnemonicInput() {\n      var mnemonic = this.mnemonic;\n      var result = this.$bip39.validateMnemonic(mnemonic);\n      var msg = '';\n\n      if (!mnemonic) {\n        msg = '请输入助记词';\n        this.btnDisabled = true;\n      } else if (!result) {\n        msg = '输入的助记词格式有误';\n        this.btnDisabled = true;\n      } else {\n        this.btnDisabled = false;\n      }\n\n      this.mnemonicError = msg;\n    },\n    // 用户名\n    userNameBlur: function userNameBlur() {\n      var userName = this.userName;\n      var msg = '';\n\n      if (!userName) {\n        msg = '请输入用户名';\n        this.btnDisabled = true;\n      } else {\n        this.btnDisabled = false;\n      }\n\n      this.userNameError = msg;\n    },\n    // 密码验证\n    pwdInput: function pwdInput() {\n      var pwd = this.pwd;\n      var msg = '';\n\n      if (!pwd) {\n        msg = '请输入密码';\n        this.btnDisabled = true;\n      } else if (pwd.length < 8) {\n        msg = '请输入至少8位字符的密码';\n        this.btnDisabled = true;\n      } else if (pwd.length > 24) {\n        msg = '请输入不超过24位字符的密码';\n        this.btnDisabled = true;\n      } else if (!/^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)])+$).{8,24}$/.test(pwd)) {\n        msg = '请输入数字、字母或字符组合的密码';\n        this.btnDisabled = true;\n      } else {\n        this.btnDisabled = false;\n      }\n\n      this.pwdError = msg;\n    },\n    // 确认密码\n    confirmPwdInput: function confirmPwdInput() {\n      var pwd = this.pwd;\n      var confirmPwd = this.confirmPwd;\n      var msg = '';\n\n      if (!confirmPwd) {\n        msg = '请再次输入密码';\n        this.btnDisabled = true;\n      } else if (pwd !== confirmPwd) {\n        msg = '两次密码输入不一致';\n        this.btnDisabled = true;\n      } else {\n        this.btnDisabled = false;\n      }\n\n      this.confirmPwdError = msg;\n    },\n    // 回退\n    back: function back() {\n      this.$router.go(-1);\n    },\n    // 恢复身份\n    recover: function () {\n      var _recover = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var pwdError, confirmPwdError, mnemonicError, userNameError, pwd, mnemonic, userName, base58, pk, obj, keystore, params, recoverToast;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.mnemonicInput();\n                this.pwdInput();\n                this.confirmPwdInput();\n                pwdError = this.pwdError;\n                confirmPwdError = this.confirmPwdError;\n                mnemonicError = this.mnemonicError;\n                userNameError = this.userNameError;\n\n                if (!(pwdError || confirmPwdError || mnemonicError || userNameError)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 11:\n                pwd = this.pwd;\n                mnemonic = this.mnemonic;\n                userName = this.userName; // 生成 keystore\n\n                base58 = this.$bip44.mnemonicToHDPrivateKey(mnemonic, null);\n                pk = this.$bip44.getPrivateKey(base58, 0).toString('hex');\n                obj = this.$cwv.KeyPair.genFromPrikey(pk);\n                keystore = this.$cwv.keystore.exportJSON(obj, pwd);\n                console.log(obj);\n                console.log(keystore); // const recoverToast = Toast.loading({\n                //   duration: 0,\n                //   mask: true,\n                //   message: '恢复中...'\n                // })\n                // getUserInfo({ address: obj.hexAddress }).then((res) => {\n                //   console.log('获取用户名', res)\n                //   if (res.status === 200) {\n                //     if (res.data.errCode && res.data.errCode === -1) {\n                //       recoverToast.clear()\n                //       Toast({\n                //         duration: 1000,\n                //         message: res.data.errMsg\n                //       })\n                //       return false\n                //     }\n                //     const recoverName = res.data.alias\n                // 注册钱包地址\n\n                params = {\n                  method: 'BrokerInfo',\n                  from: obj.hexAddress,\n                  jsbody: JSON.stringify({\n                    uinfo: {\n                      alias: userName\n                    }\n                  }),\n                  refid: new Date() - 0\n                };\n                recoverToast = _vant.Toast.loading({\n                  duration: 0,\n                  mask: true,\n                  message: '恢复中...'\n                });\n                (0, _create.userLogin)(params).then(function (res) {\n                  if (res.status === 200 && res.data.ret_code === 0) {\n                    // 注册返回data 进行签名\n                    var ecHexSign = _this2.$cwv2.ecHexSign(obj.hexPrikey, res.data.hexdata);\n\n                    console.log('ecHexSign', ecHexSign);\n                    var params2 = {\n                      signdata: ecHexSign,\n                      method: res.data.method,\n                      waitResp: true,\n                      from: res.data.from,\n                      hexdata: res.data.hexdata,\n                      refid: res.data.refid,\n                      resp_refid: res.data.resp_refid\n                    };\n                    console.log('send_sign', params2);\n                    (0, _sign.sendSignData)(params2).then(function (res) {\n                      console.log('res', res);\n\n                      if (res.status === 200 && res.data.ret_code >= 0) {\n                        recoverToast.clear();\n                        var balance = '';\n                        (0, _create.getBalance)({\n                          address: obj.hexAddress\n                        }).then(function (res) {\n                          if (res.status === 200 && res.data.retCode < 0) {\n                            balance = 0;\n                          }\n\n                          if (res.status === 200 && res.data.retCode >= 0) {\n                            console.log(res);\n\n                            if (res.data.account.value.hasOwnProperty(\"tokens\")) {\n                              var index = res.data.account.value.tokens.findIndex(function (v) {\n                                return v.token === \"AAA\";\n                              });\n\n                              if (index >= 0) {\n                                // balance = divide(res.data.account.value.tokens[index].balance, 10 ** 18)\n                                balance = (res.data.account.value.tokens[index].balance / 1000000000000000000).toFixed(0);\n                              }\n                            } else {\n                              balance = 0;\n                            }\n                          } // 存储 keyStorage keyPair\n\n\n                          chrome.storage.local.set({\n                            keypair: obj,\n                            keystore: keystore,\n                            state: 'HAVE',\n                            balance: balance,\n                            username: userName\n                          }, function () {});\n                          chrome.extension.getBackgroundPage().GlobalState = 'OPEN';\n\n                          _this2.sendMessageToContentScript({\n                            msg: 'confirm -> content; 传递钱包地址',\n                            type: 'SENDMONEYADDRESS',\n                            data: {\n                              moneyAddress: obj.hexAddress,\n                              balance: balance\n                            }\n                          }, function (response) {\n                            console.log(response);\n                          });\n\n                          (0, _vant.Toast)({\n                            duration: 1000,\n                            message: '恢复身份成功！'\n                          });\n\n                          _this2.$router.replace({\n                            name: 'login'\n                          });\n                        }).catch(function (err) {\n                          console.log(err);\n                        });\n                      } else if (res.status === 200 && res.data.ret_code < 0) {\n                        (0, _vant.Toast)({\n                          duration: 1000,\n                          message: res.data.ret_message\n                        });\n                      }\n                    }).catch(function (err) {\n                      console.log(err);\n\n                      _vant.Toast.clear();\n                    });\n                  } else {\n                    recoverToast.clear();\n                    (0, _vant.Toast)({\n                      duration: 1000,\n                      message: res.data.ret_message\n                    });\n                  }\n                }).catch(function (err) {\n                  recoverToast.clear();\n                  (0, _vant.Toast)({\n                    duration: 1000,\n                    message: '注册信息失败'\n                  });\n                }); // } else {\n                //   recoverToast.clear()\n                //   Toast({\n                //     duration: 1000,\n                //     message: res.data.errMsg\n                //   })\n                // }\n                // }).catch((err) => {\n                //   recoverToast.clear()\n                //   Toast({\n                //     duration: 1000,\n                //     message: '获取用户信息失败！'\n                //   })\n                // })\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function recover() {\n        return _recover.apply(this, arguments);\n      }\n\n      return recover;\n    }(),\n    // 发送信息给content_script\n    getCurrentTabId: function getCurrentTabId(callback) {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      });\n    },\n    sendMessageToContentScript: function sendMessageToContentScript(message, callback) {\n      this.getCurrentTabId(function (tabId) {\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response);\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["Recover.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"recover\">\n    <div class=\"header\">\n      <van-icon @click=\"back\" name=\"arrow-left\" />\n    </div>\n    <div class=\"title\">\n      <h2>恢复身份</h2>\n      <p>使用助记词导入的同时可以修改钱包密码。</p>\n    </div>\n    <p class=\"textarea-error-msg\">{{mnemonicError}}</p>\n    <textarea class=\"mnemonic\" placeholder=\"输入助记词，用空格分隔\" @blur=\"mnemonicInput\" :class=\"{error: mnemonicError.length >= 1}\" v-model=\"mnemonic\"></textarea>\n    <div class=\"from\">\n      <p class=\"from-title\">恢复数字钱包</p>\n      <div class=\"from-item first-item\">\n        <input v-model=\"userName\" :class=\"{error: userNameError.length >= 1}\" @blur=\"userNameBlur\" placeholder=\"请输入用户名\" maxlength=\"20\">\n        <div class=\"error-msg\">{{userNameError}}</div>\n      </div>\n      <div class=\"from-item\">\n        <input type=\"password\" v-model=\"pwd\" :class=\"{error: pwdError.length >= 1}\" @input=\"pwdInput\" placeholder=\"请输入密码8-24位，建议混合大小写字母、数字\" maxlength=\"24\">\n        <div class=\"error-msg\">{{pwdError}}</div>\n      </div>\n      <div class=\"from-item\">\n        <input v-model=\"confirmPwd\" type=\"password\" @input=\"confirmPwdInput\" :class=\"{error: confirmPwdError.length >= 1}\" placeholder=\"请再次输入密码\" maxlength=\"24\">\n        <div class=\"error-msg\">{{confirmPwdError}}</div>\n      </div>\n    </div>\n    <div class=\"button\">\n      <button :class=\"{'btn':true,'btn-disabled': btnDisabled}\" @click=\"recover\" :disabled=\"btnDisabled\">恢复身份</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from 'vant'\nimport { userLogin, getBalance, getUserInfo } from '@/api/create'\nimport { sendSignData } from '@/api/sign'\nexport default {\n  data () {\n    return {\n      mnemonic: '',\n      mnemonicError: '',\n      userName: '',\n      userNameError: '',\n      pwd: '',\n      confirmPwd: '',\n      pwdError: '',\n      confirmPwdError: '',\n      btnDisabled: true,\n    }\n  },\n  created () {\n    document.onkeyup = (e) => {\n      let key = window.event.keyCode\n      if (key === 13) {\n        if (!this.btnDisabled) {\n          this.recover()\n        }\n      }\n    }\n  },\n  methods: {\n    // 助记词验证\n    mnemonicInput () {\n      let mnemonic = this.mnemonic\n      let result = this.$bip39.validateMnemonic(mnemonic)\n      let msg = '';\n      if (!mnemonic) {\n        msg = '请输入助记词'\n        this.btnDisabled = true\n      } else if (!result) {\n        msg = '输入的助记词格式有误'\n        this.btnDisabled = true\n      } else {\n        this.btnDisabled = false\n      }\n      this.mnemonicError = msg;\n    },\n    // 用户名\n    userNameBlur () {\n      let userName = this.userName\n      let msg = ''\n      if (!userName) {\n        msg = '请输入用户名'\n        this.btnDisabled = true\n      } else {\n        this.btnDisabled = false\n      }\n      this.userNameError = msg\n    },\n    // 密码验证\n    pwdInput () {\n      let pwd = this.pwd\n      let msg = '';\n      if (!pwd) {\n        msg = '请输入密码'\n        this.btnDisabled = true\n      } else if (pwd.length < 8) {\n        msg = '请输入至少8位字符的密码'\n        this.btnDisabled = true\n      } else if (pwd.length > 24) {\n        msg = '请输入不超过24位字符的密码'\n        this.btnDisabled = true\n      } else if (!(/^(?![0-9]+$)(?![a-z]+$)(?![A-Z]+$)(?!([^(0-9a-zA-Z)])+$).{8,24}$/).test(pwd)) {\n        msg = '请输入数字、字母或字符组合的密码'\n        this.btnDisabled = true\n      } else {\n        this.btnDisabled = false\n      }\n      this.pwdError = msg;\n    },\n    // 确认密码\n    confirmPwdInput () {\n      let pwd = this.pwd\n      let confirmPwd = this.confirmPwd\n      let msg = ''\n      if (!confirmPwd) {\n        msg = '请再次输入密码'\n        this.btnDisabled = true\n      } else if (pwd !== confirmPwd) {\n        msg = '两次密码输入不一致'\n        this.btnDisabled = true\n      } else {\n        this.btnDisabled = false\n      }\n      this.confirmPwdError = msg\n    },\n    // 回退\n    back () {\n      this.$router.go(-1)\n    },\n    // 恢复身份\n    async recover () {\n      this.mnemonicInput()\n      this.pwdInput()\n      this.confirmPwdInput()\n      let pwdError = this.pwdError\n      let confirmPwdError = this.confirmPwdError\n      let mnemonicError = this.mnemonicError\n      let userNameError = this.userNameError\n      if (pwdError || confirmPwdError || mnemonicError || userNameError) {\n        return false\n      } else {\n        let pwd = this.pwd\n        let mnemonic = this.mnemonic\n        let userName = this.userName\n        // 生成 keystore\n        let base58 = this.$bip44.mnemonicToHDPrivateKey(mnemonic, null)\n        let pk = this.$bip44.getPrivateKey(base58, 0).toString('hex')\n        let obj = this.$cwv.KeyPair.genFromPrikey(pk)\n        let keystore = this.$cwv.keystore.exportJSON(obj, pwd)\n        console.log(obj)\n        console.log(keystore)\n        // const recoverToast = Toast.loading({\n        //   duration: 0,\n        //   mask: true,\n        //   message: '恢复中...'\n        // })\n        // getUserInfo({ address: obj.hexAddress }).then((res) => {\n        //   console.log('获取用户名', res)\n        //   if (res.status === 200) {\n        //     if (res.data.errCode && res.data.errCode === -1) {\n        //       recoverToast.clear()\n        //       Toast({\n        //         duration: 1000,\n        //         message: res.data.errMsg\n        //       })\n        //       return false\n        //     }\n        //     const recoverName = res.data.alias\n        // 注册钱包地址\n        let params = {\n          method: 'BrokerInfo',\n          from: obj.hexAddress,\n          jsbody: JSON.stringify({\n            uinfo: {\n              alias: userName\n            }\n          }),\n          refid: new Date() - 0\n        }\n        const recoverToast = Toast.loading({\n          duration: 0,\n          mask: true,\n          message: '恢复中...'\n        })\n        userLogin(params).then((res) => {\n          if (res.status === 200 && res.data.ret_code === 0) {\n            // 注册返回data 进行签名\n            let ecHexSign = this.$cwv2.ecHexSign(obj.hexPrikey, res.data.hexdata)\n            console.log('ecHexSign', ecHexSign)\n            let params2 = {\n              signdata: ecHexSign,\n              method: res.data.method,\n              waitResp: true,\n              from: res.data.from,\n              hexdata: res.data.hexdata,\n              refid: res.data.refid,\n              resp_refid: res.data.resp_refid\n            }\n            console.log('send_sign', params2)\n            sendSignData(params2).then((res) => {\n              console.log('res', res)\n              if (res.status === 200 && res.data.ret_code >= 0) {\n                recoverToast.clear()\n                let balance = ''\n                getBalance({ address: obj.hexAddress }).then((res) => {\n                  if (res.status === 200 && res.data.retCode < 0) {\n                    balance = 0\n                  }\n                  if (res.status === 200 && res.data.retCode >= 0) {\n                    console.log(res)\n                    if (res.data.account.value.hasOwnProperty(\"tokens\")) {\n                      let index = res.data.account.value.tokens.findIndex(v => {\n                        return v.token === \"AAA\"\n                      })\n                      if (index >= 0) {\n                        // balance = divide(res.data.account.value.tokens[index].balance, 10 ** 18)\n                        balance = (res.data.account.value.tokens[index].balance / 1000000000000000000).toFixed(0)\n                      }\n                    }\n                    else {\n                      balance = 0\n                    }\n                  }\n                  // 存储 keyStorage keyPair\n                  chrome.storage.local.set({\n                    keypair: obj,\n                    keystore,\n                    state: 'HAVE',\n                    balance,\n                    username: userName\n                  }, function () {\n                  })\n                  chrome.extension.getBackgroundPage().GlobalState = 'OPEN'\n                  this.sendMessageToContentScript({ msg: 'confirm -> content; 传递钱包地址', type: 'SENDMONEYADDRESS', data: { moneyAddress: obj.hexAddress, balance } }, (response) => {\n                    console.log(response)\n                  })\n                  Toast({\n                    duration: 1000,\n                    message: '恢复身份成功！'\n                  })\n                  this.$router.replace({ name: 'login' })\n                }).catch((err) => {\n                  console.log(err)\n                })\n              } else if (res.status === 200 && res.data.ret_code < 0) {\n                Toast({\n                  duration: 1000,\n                  message: res.data.ret_message\n                })\n              }\n            }).catch((err) => {\n              console.log(err)\n              Toast.clear()\n            })\n          } else {\n            recoverToast.clear()\n            Toast({\n              duration: 1000,\n              message: res.data.ret_message\n            })\n          }\n        }).catch((err) => {\n          recoverToast.clear()\n          Toast({\n            duration: 1000,\n            message: '注册信息失败'\n          })\n        })\n        // } else {\n        //   recoverToast.clear()\n        //   Toast({\n        //     duration: 1000,\n        //     message: res.data.errMsg\n        //   })\n        // }\n        // }).catch((err) => {\n        //   recoverToast.clear()\n        //   Toast({\n        //     duration: 1000,\n        //     message: '获取用户信息失败！'\n        //   })\n        // })\n      }\n    },\n    // 发送信息给content_script\n    getCurrentTabId (callback) {\n      chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      })\n    },\n    sendMessageToContentScript (message, callback) {\n      this.getCurrentTabId((tabId) => {\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response)\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.recover {\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  .header {\n    font-size: 16px;\n    .van-icon-arrow-left {\n      cursor: pointer;\n      color: #516fea;\n    }\n  }\n  .title {\n    width: 100%;\n    margin-top: 20px;\n    text-align: center;\n    h2 {\n      font-size: 18px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 24px;\n    }\n    p {\n      font-size: 14px;\n      margin-top: 6px;\n      font-family: PingFangSC-Light;\n      font-weight: 300;\n      color: rgba(0, 0, 0, 0.65);\n      line-height: 20px;\n    }\n  }\n  .textarea-error-msg {\n    height: 16px;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 12px;\n    font-family: PingFangSC-Regular;\n    font-weight: 400;\n    color: rgba(246, 34, 46, 1);\n    line-height: 16px;\n  }\n  .mnemonic {\n    width: 100%;\n    height: 127px;\n    margin-top: 4px;\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 4px;\n    border: none;\n    font-size: 14px;\n    font-family: PingFangSC-Light;\n    font-weight: 300;\n    color: rgba(0, 0, 0, 0.85);\n    line-height: 20px;\n    padding: 10px;\n    resize: none;\n    &.error {\n      border: 1px solid rgba(246, 34, 46, 1);\n    }\n  }\n  .from {\n    margin-top: 20px;\n    &-title {\n      font-size: 14px;\n      text-align: left;\n      font-family: PingFangSC-Regular;\n      font-weight: 400;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 20px;\n    }\n    &-item {\n      margin-top: 24px;\n      height: 34px;\n      position: relative;\n      &:last-child {\n        margin-bottom: 24px;\n      }\n      input {\n        font-size: 14px;\n        height: 100%;\n        font-family: PingFangSC-Light;\n        font-weight: 400;\n        color: rgba(0, 0, 0, 0.85);\n        line-height: 20px;\n        padding: 0;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n      }\n      input.error {\n        border-color: rgba(246, 34, 46, 1);\n      }\n      .error-msg {\n        text-align: left;\n        font-size: 12px;\n        font-family: PingFangSC-Regular;\n        font-weight: 400;\n        color: rgba(246, 34, 46, 1);\n        line-height: 18px;\n      }\n    }\n    .first-item {\n      margin-top: 10px;\n    }\n  }\n  .button {\n    text-align: center;\n    margin-top: 35px;\n    width: 100%;\n    .btn {\n      width: 283px;\n      height: 48px;\n      background: rgba(51, 76, 169, 1);\n      border-radius: 4px;\n      border: 1px solid rgba(51, 76, 169, 1);\n      font-size: 13px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(255, 255, 255, 1);\n    }\n    .btn-disabled {\n      background: rgba(174, 184, 221, 1);\n      color: rgba(255, 255, 255, 1);\n      border: 1px solid rgba(174, 184, 221, 1);\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/recover"}]}