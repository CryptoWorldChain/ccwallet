{"remainingRequest":"/Users/will/Documents/finchain/2020/extension/node_modules/babel-loader/lib/index.js!/Users/will/Documents/finchain/2020/extension/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/will/Documents/finchain/2020/extension/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/finchain/2020/extension/src/views/create/CreateConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/will/Documents/finchain/2020/extension/src/views/create/CreateConfirm.vue","mtime":1575276266590},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/will/Documents/finchain/2020/extension/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/will/Documents/finchain/2020/extension/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"/Users/will/Documents/finchain/2020/extension/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\"));\n\nvar _vant = require(\"vant\");\n\nvar _create = require(\"@/api/create\");\n\nvar _sign = require(\"@/api/sign\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      errorMsg: '',\n      orginWords: [],\n      confirmWords: [],\n      words: []\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    // 回车事件\n    document.onkeyup = function (e) {\n      var key = window.event.keyCode;\n\n      if (key === 13) {\n        _this.complete();\n      }\n    };\n  },\n  mounted: function mounted() {\n    var words = this.$route.params.mnemonic || [];\n    this.orginWords = (0, _toConsumableArray2.default)(words);\n    this.words = this.disorde(words);\n  },\n  methods: {\n    // 下面助记词点击\n    wordsClick: function wordsClick(i) {\n      var delItem = this.words.splice(i, 1);\n      this.confirmWords.push({\n        index: i,\n        item: delItem[0]\n      });\n    },\n    // 上面助记词点击\n    confirmWordsClick: function confirmWordsClick(val, i) {\n      this.confirmWords.splice(i, 1);\n      this.words.splice(val.index, 0, val.item);\n    },\n    // 数组乱序\n    disorde: function disorde(arr) {\n      for (var i = arr.length - 1; i >= 0; i--) {\n        var rIndex = Math.floor(Math.random() * (i + 1));\n        var temp = arr[rIndex];\n        arr[rIndex] = arr[i];\n        arr[i] = temp;\n      }\n\n      return arr;\n    },\n    // 回退\n    back: function back() {\n      this.$router.go(-1);\n    },\n    // 完成\n    complete: function () {\n      var _complete = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var confirmWords, confirmWordsStr, mnemonicStr, timer, pwd, userName, mnemonic, base58, pk, obj, keystore, params, recoverToast, balance;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 验证助记词\n                confirmWords = this.confirmWords.map(function (v) {\n                  return v.item;\n                }); // 输入的助记词\n\n                confirmWordsStr = confirmWords.join(' '); // 原助记词\n\n                mnemonicStr = this.orginWords.join(' '); // TODO: !!!!!!!!!!!!!!!!!\n\n                if (!(confirmWordsStr !== mnemonicStr)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.errorMsg = '助记词顺序有误，请重新选择';\n                timer = setInterval(function () {\n                  _this2.errorMsg = '';\n                  clearInterval(timer);\n                }, 1000);\n                return _context.abrupt(\"return\", false);\n\n              case 7:\n                this.errorMsg = ''; // 获取密码\n\n                pwd = '';\n                _context.next = 11;\n                return this.$unit.getStorage('password').then(function (v) {\n                  pwd = v;\n                });\n\n              case 11:\n                // 获取用户名\n                userName = '';\n                _context.next = 14;\n                return this.$unit.getStorage('username').then(function (v) {\n                  userName = v;\n                });\n\n              case 14:\n                // 生成 keystore\n                mnemonic = this.orginWords.join(' '); // alert(mnemonic)\n\n                base58 = this.$bip44.mnemonicToHDPrivateKey(mnemonic, null);\n                pk = this.$bip44.getPrivateKey(base58, 0).toString('hex');\n                obj = this.$cwv.KeyPair.genFromPrikey(pk);\n                console.log(obj);\n                keystore = this.$cwv.keystore.exportJSON(obj, pwd);\n                console.log(keystore); // this.sendRegister(obj.hexAddress)\n                // 注册钱包地址\n\n                params = {\n                  method: 'BrokerInfo',\n                  from: obj.hexAddress,\n                  jsbody: JSON.stringify({\n                    uinfo: {\n                      alias: userName\n                    }\n                  }),\n                  refid: new Date() - 0\n                };\n                recoverToast = _vant.Toast.loading({\n                  duration: 0,\n                  mask: true,\n                  message: '创建中...'\n                });\n                balance = 0;\n                chrome.storage.local.set({\n                  keypair: obj,\n                  keystore: keystore,\n                  state: 'HAVE',\n                  balance: balance\n                }, function () {});\n                chrome.extension.getBackgroundPage().GlobalState = 'OPEN';\n                this.sendMessageToContentScript({\n                  msg: 'confirm -> content; 传递钱包地址',\n                  type: 'SENDMONEYADDRESS',\n                  data: {\n                    moneyAddress: obj.hexAddress,\n                    balance: balance\n                  }\n                }, function (response) {\n                  console.log(response);\n                });\n                (0, _vant.Toast)({\n                  duration: 1000,\n                  message: '创建身份成功！'\n                });\n                this.$router.replace({\n                  name: 'login'\n                });\n                return _context.abrupt(\"return\");\n\n              case 31:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n\n      return complete;\n    }(),\n    // 发送信息给content_script\n    getCurrentTabId: function getCurrentTabId(callback) {\n      chrome.tabs.query({\n        active: true,\n        currentWindow: true\n      }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      });\n    },\n    sendMessageToContentScript: function sendMessageToContentScript(message, callback) {\n      this.getCurrentTabId(function (tabId) {\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response);\n        });\n      });\n    },\n    divide: function divide(num1, num2) {\n      var num1Changed = this.float2Fixed(num1);\n      var num2Changed = this.float2Fixed(num2);\n      return num1Changed / num2Changed * Math.pow(10, this.digitLength(num2) - this.digitLength(num1));\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["CreateConfirm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"confirm\">\n    <div class=\"header\">\n      <van-icon @click=\"back\" name=\"arrow-left\" />\n    </div>\n    <div class=\"title\">\n      <h2>确认助记词</h2>\n      <p>请按顺序点击助记词，以确认您正确备份。</p>\n    </div>\n    <p class=\"error-msg\">{{errorMsg}}</p>\n    <ul class=\"confirm-words\">\n      <li v-for=\"(item, index) in confirmWords\" :key=\"index\" @click=\"confirmWordsClick(item, index)\">{{item.item}}</li>\n    </ul>\n    <ul class=\"words\">\n      <li v-for=\"(item, index) in words\" :key=\"index\" @click=\"wordsClick(index)\">{{item}}</li>\n    </ul>\n    <div class=\"button\">\n      <button class=\"btn\" @click=\"complete\">完成</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from 'vant'\nimport { userLogin, getBalance } from '@/api/create'\nimport { sendSignData } from '@/api/sign'\nexport default {\n  data () {\n    return {\n      errorMsg: '',\n      orginWords: [],\n      confirmWords: [],\n      words: []\n    }\n  },\n  created () {\n    // 回车事件\n    document.onkeyup = (e) => {\n      let key = window.event.keyCode\n      if (key === 13) {\n        this.complete()\n      }\n    }\n  },\n  mounted () {\n    let words = this.$route.params.mnemonic || []\n    this.orginWords = [...words]\n    this.words = this.disorde(words)\n  },\n  methods: {\n    // 下面助记词点击\n    wordsClick (i) {\n      let delItem = this.words.splice(i, 1)\n      this.confirmWords.push({ index: i, item: delItem[0] })\n    },\n    // 上面助记词点击\n    confirmWordsClick (val, i) {\n      this.confirmWords.splice(i, 1)\n      this.words.splice(val.index, 0, val.item)\n    },\n    // 数组乱序\n    disorde (arr) {\n      for (let i = arr.length - 1; i >= 0; i--) {\n        let rIndex = Math.floor(Math.random() * (i + 1));\n        let temp = arr[rIndex];\n        arr[rIndex] = arr[i];\n        arr[i] = temp;\n      }\n      return arr\n    },\n    // 回退\n    back () {\n      this.$router.go(-1)\n    },\n    // 完成\n    async complete () {\n      // 验证助记词\n      let confirmWords = this.confirmWords.map(v => {\n        return v.item\n      })\n      // 输入的助记词\n      let confirmWordsStr = confirmWords.join(' ')\n      // 原助记词\n      let mnemonicStr = this.orginWords.join(' ')\n      // TODO: !!!!!!!!!!!!!!!!!\n      if (confirmWordsStr !== mnemonicStr) {\n        this.errorMsg = '助记词顺序有误，请重新选择'\n        const timer = setInterval(() => {\n          this.errorMsg = ''\n          clearInterval(timer)\n        }, 1000)\n        return false\n      }\n      this.errorMsg = ''\n      // 获取密码\n      let pwd = ''\n      await this.$unit.getStorage('password').then((v) => {\n        pwd = v\n      })\n      // 获取用户名\n      let userName = ''\n      await this.$unit.getStorage('username').then((v) => {\n        userName = v\n      })\n      // 生成 keystore\n      let mnemonic = this.orginWords.join(' ')\n      // alert(mnemonic)\n      let base58 = this.$bip44.mnemonicToHDPrivateKey(mnemonic, null)\n      let pk = this.$bip44.getPrivateKey(base58, 0).toString('hex')\n      let obj = this.$cwv.KeyPair.genFromPrikey(pk)\n      console.log(obj)\n      let keystore = this.$cwv.keystore.exportJSON(obj, pwd)\n      console.log(keystore)\n      // this.sendRegister(obj.hexAddress)\n\n      // 注册钱包地址\n      let params = {\n        method: 'BrokerInfo',\n        from: obj.hexAddress,\n        jsbody: JSON.stringify({\n          uinfo: {\n            alias: userName\n          }\n        }),\n        refid: new Date() - 0\n      }\n      const recoverToast = Toast.loading({\n        duration: 0,\n        mask: true,\n        message: '创建中...'\n      })\n      var balance = 0\n      chrome.storage.local.set({\n                  keypair: obj,\n                  keystore,\n                  state: 'HAVE',\n                  balance,\n                }, function () {\n                })\n                chrome.extension.getBackgroundPage().GlobalState = 'OPEN'\n                this.sendMessageToContentScript({ msg: 'confirm -> content; 传递钱包地址', type: 'SENDMONEYADDRESS', data: { moneyAddress: obj.hexAddress, balance} }, (response) => {\n                  console.log(response)\n                })\n                Toast({\n                  duration: 1000,\n                  message: '创建身份成功！'\n                })\n                this.$router.replace({ name: 'login' })\n                return\n      userLogin(params).then((res) => {\n        if (res.status === 200 && res.data.ret_code === 0) {\n          // 注册返回data 进行签名\n          let ecHexSign = this.$cwv2.ecHexSign(obj.hexPrikey, res.data.hexdata)\n          console.log('ecHexSign', ecHexSign)\n          let params2 = {\n            signdata: ecHexSign,\n            method: res.data.method,\n            waitResp: true,\n            from: res.data.from,\n            hexdata: res.data.hexdata,\n            refid: res.data.refid,\n            resp_refid: res.data.resp_refid\n          }\n          console.log('send_sign', params2)\n          sendSignData(params2).then((res) => {\n            console.log('res', res)\n            if (res.status === 200 && res.data.ret_code >= 0) {\n              recoverToast.clear()\n              let balance = ''\n              getBalance({ address: obj.hexAddress }).then((res) => {\n                if (res.status === 200 && res.data.retCode < 0) {\n                  balance = 0\n                }\n                if (res.status === 200 && res.data.retCode >= 0) {\n                  console.log(res)\n                  if (res.data.account.value.hasOwnProperty(\"tokens\")) {\n                    let index = res.data.account.value.tokens.findIndex(v => {\n                      return v.token === \"AAA\"\n                    })\n                    if (index >= 0) {\n                      // balance = divide(res.data.account.value.tokens[index].balance, 10 ** 18)\n                      balance = (res.data.account.value.tokens[index].balance / 1000000000000000000).toFixed(0)\n                    }\n                  }\n                  else {\n                    balance = 0\n                  }\n                }\n                // 存储 keyStorage keyPair\n                chrome.storage.local.set({\n                  keypair: obj,\n                  keystore,\n                  state: 'HAVE',\n                  balance\n                }, function () {\n                })\n                chrome.extension.getBackgroundPage().GlobalState = 'OPEN'\n                this.sendMessageToContentScript({ msg: 'confirm -> content; 传递钱包地址', type: 'SENDMONEYADDRESS', data: { moneyAddress: obj.hexAddress, balance } }, (response) => {\n                  console.log(response)\n                })\n                Toast({\n                  duration: 1000,\n                  message: '创建身份成功！'\n                })\n                this.$router.replace({ name: 'login' })\n              }).catch((err) => {\n                console.log(err)\n              })\n            } else if (res.status === 200 && res.data.ret_code < 0) {\n              Toast({\n                duration: 1000,\n                message: res.data.ret_message\n              })\n            }\n          }).catch((err) => {\n            console.log(err)\n            Toast.clear()\n          })\n        } else {\n          recoverToast.clear()\n          Toast({\n            duration: 1000,\n            message: res.data.ret_message\n          })\n        }\n      }).catch((err) => {\n        recoverToast.clear()\n        Toast({\n          duration: 1000,\n          message: '注册信息失败'\n        })\n      })\n    },\n    // 发送信息给content_script\n    getCurrentTabId (callback) {\n      chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      })\n    },\n    sendMessageToContentScript (message, callback) {\n      this.getCurrentTabId((tabId) => {\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response)\n        })\n      })\n    },\n    divide (num1, num2) {\n      const num1Changed = this.float2Fixed(num1)\n      const num2Changed = this.float2Fixed(num2)\n      return (num1Changed / num2Changed) * Math.pow(10, this.digitLength(num2) - this.digitLength(num1))\n    }\n\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.confirm {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  padding: 20px;\n  .header {\n    font-size: 16px;\n    .van-icon-arrow-left {\n      cursor: pointer;\n      color: #516fea;\n    }\n  }\n  .title {\n    margin-top: 18px;\n    text-align: center;\n    h2 {\n      font-size: 18px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 24px;\n    }\n    p {\n      font-size: 14px;\n      margin-top: 6px;\n      font-family: PingFangSC-Light;\n      font-weight: 300;\n      color: rgba(0, 0, 0, 0.65);\n      line-height: 20px;\n    }\n  }\n  .error-msg {\n    height: 16px;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 12px;\n    font-family: PingFangSC-Regular;\n    font-weight: 400;\n    color: rgba(246, 34, 46, 1);\n    line-height: 16px;\n  }\n  .words {\n    width: 100%;\n    height: 138px;\n    margin-top: 18px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 76px;\n      height: 34px;\n      text-align: center;\n      background: rgba(51, 76, 169, 0.08);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 5px;\n      margin-top: 12px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .confirm-words {\n    width: 100%;\n    margin-top: 4px;\n    padding: 6px;\n    min-height: 166px;\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 4px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 74px;\n      height: 34px;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.04);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 4px;\n      margin-top: 13px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .button {\n    text-align: center;\n    margin-top: 40px;\n    .btn {\n      width: 283px;\n      height: 48px;\n      background: rgba(51, 76, 169, 1);\n      border-radius: 4px;\n      border: 1px solid rgba(51, 76, 169, 1);\n      font-size: 13px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(255, 255, 255, 1);\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views/create"}]}