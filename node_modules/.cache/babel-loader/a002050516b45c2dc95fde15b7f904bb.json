{"remainingRequest":"/Users/will/Documents/finchain/plugin/extension/node_modules/thread-loader/dist/cjs.js!/Users/will/Documents/finchain/plugin/extension/node_modules/babel-loader/lib/index.js!/Users/will/Documents/finchain/plugin/extension/src/https.js","dependencies":[{"path":"/Users/will/Documents/finchain/plugin/extension/src/https.js","mtime":1574819910000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/will/Documents/finchain/plugin/extension/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar isProd = process.env.NODE_ENV === 'production';\n\nvar service = _axios.default.create({\n  baseURL: !isProd ? '/api' : '',\n  // baseURL: '/api',\n  timeout: 30000,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}); // 添加请求拦截器\n\n\nservice.interceptors.request.use(function (config) {\n  // if (config.url === '/login') {\n  //   return Promise.reject('错误')\n  // }\n  // 在发送请求之前做些什么\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\nservice.interceptors.response.use(function (response) {\n  // console.log(response)\n  // 对响应数据做点什么\n  return response;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",{"version":3,"sources":["/Users/will/Documents/finchain/plugin/extension/src/https.js"],"names":["isProd","process","env","NODE_ENV","service","axios","create","baseURL","timeout","responseType","headers","interceptors","request","use","config","error","Promise","reject","response"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAxC;;AACA,IAAMC,OAAO,GAAGC,eAAMC,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,CAACP,MAAD,GAAU,MAAV,GAAmB,EADD;AAE3B;AACAQ,EAAAA,OAAO,EAAE,KAHkB;AAI3BC,EAAAA,YAAY,EAAE,MAJa;AAK3BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AALkB,CAAb,CAAhB,C,CAUA;;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CAAiC,UAAUC,MAAV,EAAkB;AACjD;AACA;AACA;AACA;AACA,SAAOA,MAAP;AACD,CAND,EAMG,UAAUC,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATD,E,CAWA;;AACAX,OAAO,CAACO,YAAR,CAAqBO,QAArB,CAA8BL,GAA9B,CAAkC,UAAUK,QAAV,EAAoB;AACpD;AACA;AACA,SAAOA,QAAP;AACD,CAJD,EAIG,UAAUH,KAAV,EAAiB;AAClB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAPD;eASeX,O","sourcesContent":["import axios from 'axios'\n\nconst isProd = process.env.NODE_ENV === 'production'\nconst service = axios.create({\n  baseURL: !isProd ? '/api' : '',\n  // baseURL: '/api',\n  timeout: 30000,\n  responseType: 'json',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\n// 添加请求拦截器\nservice.interceptors.request.use(function (config) {\n  // if (config.url === '/login') {\n  //   return Promise.reject('错误')\n  // }\n  // 在发送请求之前做些什么\n  return config\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error)\n})\n\n// 添加响应拦截器\nservice.interceptors.response.use(function (response) {\n  // console.log(response)\n  // 对响应数据做点什么\n  return response\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error)\n})\n\nexport default service"]}]}