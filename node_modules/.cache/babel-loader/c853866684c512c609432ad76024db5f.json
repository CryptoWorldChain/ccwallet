{"remainingRequest":"/Users/will/Documents/finchain/plugin/extension/node_modules/thread-loader/dist/cjs.js!/Users/will/Documents/finchain/plugin/extension/node_modules/babel-loader/lib/index.js!/Users/will/Documents/finchain/plugin/extension/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/will/Documents/finchain/plugin/extension/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/finchain/plugin/extension/src/views/signature/Signature.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/will/Documents/finchain/plugin/extension/src/views/signature/Signature.vue","mtime":1577242657620},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/plugin/extension/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/Users/will/Documents/finchain/plugin/extension/node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"/Users/will/Documents/finchain/plugin/extension/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\"));\n\nvar _sign = require(\"@/api/sign\");\n\nvar _vant = require(\"vant\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      // signJSONArr: []\n      signJson: '',\n      signReturnData: ''\n    };\n  },\n  created: function () {\n    var _created = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var background;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              background = chrome.extension.getBackgroundPage();\n              this.signJson = background.signJson();\n              this.signReturnData = this.signJson;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  computed: function computed() {\n    var that = this;\n    window.addEventListener('beforeunload', function () {\n      that.refuse();\n    });\n  },\n  methods: {\n    // 取消\n    refuse: function refuse() {\n      // 清除 badge \n      var background = chrome.extension.getBackgroundPage();\n      background.signJsonStr = null;\n      chrome.runtime.sendMessage({\n        type: 'SIGNJSONRETURN',\n        data: this.signJson\n      }); // TODO: 向页面发送取消请求\n\n      this.sendMessageToContentScript({\n        msg: '取消你的签名请求',\n        type: 'SIGNDATARETURN',\n        status: 'refuse'\n      }, function (response) {\n        console.log(response);\n      });\n      setTimeout(function () {\n        window.close();\n      }, 100);\n    },\n    agree: function () {\n      var _agree = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var keypair, privatekey, address, str, $cwv, from, exdata, background, args, bg, params;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _vant.Toast.loading({\n                  duration: 0,\n                  mask: true,\n                  message: '签名中...'\n                });\n\n                this.sendMessageToContentScript({\n                  msg: '正在签名',\n                  type: 'SIGNDATARETURN',\n                  status: 'doing'\n                }, function (response) {\n                  console.log(response);\n                }); // 获取 keypair\n\n                keypair = '';\n                _context2.next = 5;\n                return this.$unit.getStorage('keypair').then(function (v) {\n                  keypair = v;\n                });\n\n              case 5:\n                privatekey = keypair.hexPrikey;\n                address = keypair.hexAddress;\n                console.log('keypair', keypair);\n                console.log('this.signHexData', this.signReturnData);\n                str = this.signReturnData; // 通过私钥和第一次请求返回的hashData进行数据签名\n                // let ecHexSign = this.$cwv2.ecHexSign(privatekey, this.signReturnData)\n\n                $cwv = this.$cwv;\n                keypair = $cwv.KeyPair.genFromPrikey(privatekey);\n                keypair.nonce = 0;\n                from = {\n                  keypair: keypair\n                };\n                exdata = str;\n                background = chrome.extension.getBackgroundPage();\n                background.signJsonStr = null;\n                args = [{\n                  \"address\": \"7fc4566cd2c9723d014e618245d8806c51f74b33\",\n                  \"token\": \"AAA\",\n                  \"tokenAmount\": 0\n                }]; // 签名请求\n\n                bg = chrome.extension.getBackgroundPage();\n                exdata = $cwv.Buffer.from(exdata).toString('hex');\n                window.$cwv = $cwv;\n                window.args = args;\n                window.exdata = exdata;\n                window.from = from;\n                console.log(JSON.stringify(from));\n                console.log(JSON.stringify(exdata));\n                console.log(JSON.stringify(args));\n                bg.signData($cwv, from, exdata, args); // window.close()\n\n                return _context2.abrupt(\"return\");\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function agree() {\n        return _agree.apply(this, arguments);\n      }\n\n      return agree;\n    }(),\n    getCurrentTabId: function getCurrentTabId(callback) {\n      chrome.tabs.query({\n        active: true\n      }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      });\n    },\n    sendMessageToContentScript: function sendMessageToContentScript(message, callback) {\n      this.getCurrentTabId(function (tabId) {\n        console.log(tabId, message);\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response);\n        });\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["Signature.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"signature\">\n    <h2></h2>\n    <p>请求签名</p>\n    <div class=\"button\">\n      <button class=\"refuse\" @click=\"refuse\">取消</button>\n      <button class=\"agree\" @click=\"agree\">同意</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getSignData, sendSignData } from '@/api/sign'\nimport { Toast } from 'vant'\nexport default {\n  data () {\n    return {\n      // signJSONArr: []\n      signJson: '',\n      signReturnData: '',\n    }\n  },\n  async created () {\n    let background = chrome.extension.getBackgroundPage()\n    this.signJson = background.signJson()\n    this.signReturnData = this.signJson\n  },\n  computed () { \n    let that = this\n    window.addEventListener('beforeunload', function () {\n      that.refuse()\n    })\n  },\n  methods: {\n    // 取消\n    refuse () {\n      // 清除 badge \n      let background = chrome.extension.getBackgroundPage()\n      background.signJsonStr = null\n      chrome.runtime.sendMessage({\n        type: 'SIGNJSONRETURN',\n        data: this.signJson\n      })\n      // TODO: 向页面发送取消请求\n      this.sendMessageToContentScript({ msg: '取消你的签名请求', type: 'SIGNDATARETURN', status: 'refuse' }, (response) => {\n        console.log(response)\n      })\n      setTimeout(() => {\n        window.close()\n      }, 100);\n    },\n    async agree () {\n      Toast.loading({\n        duration: 0,\n        mask: true,\n        message: '签名中...'\n      })\n      this.sendMessageToContentScript({ msg: '正在签名', type: 'SIGNDATARETURN', status: 'doing' }, (response) => {\n        console.log(response)\n      })\n      // 获取 keypair\n      let keypair = ''\n      await this.$unit.getStorage('keypair').then((v) => {\n        keypair = v\n      })\n      let privatekey = keypair.hexPrikey\n      let address = keypair.hexAddress\n      console.log('keypair', keypair)\n      console.log('this.signHexData', this.signReturnData)\n      let str = this.signReturnData\n      // 通过私钥和第一次请求返回的hashData进行数据签名\n      // let ecHexSign = this.$cwv2.ecHexSign(privatekey, this.signReturnData)\n      var $cwv = this.$cwv\n      keypair = $cwv.KeyPair.genFromPrikey(privatekey)\n      keypair.nonce = 0\n      var from = { keypair: keypair }\n      var exdata = str\n      let background = chrome.extension.getBackgroundPage()\n      background.signJsonStr = null\n      var args = [{\"address\":\"7fc4566cd2c9723d014e618245d8806c51f74b33\",\"token\":\"AAA\",\"tokenAmount\":0}]\n      // 签名请求\n      var bg = chrome.extension.getBackgroundPage()\n      exdata = $cwv.Buffer.from(exdata).toString('hex')\n      window.$cwv = $cwv\n      window.args = args\n      window.exdata = exdata\n      window.from = from\n      console.log(JSON.stringify(from))\n      console.log(JSON.stringify(exdata))\n      console.log(JSON.stringify(args))\n      bg.signData($cwv, from, exdata, args)\n      // window.close()\n      return\n      let params = {\n        signdata: ecHexSign,\n        method: this.signReturnData.method,\n        waitResp: this.signReturnData.waitResp || false,\n        from: this.signReturnData.from,\n        hexdata: this.signReturnData.hexdata,\n        refid: this.signReturnData.refid,\n        resp_refid: this.signReturnData.resp_refid\n      }\n      console.log('send_sign', params)\n      sendSignData(params).then((res) => {\n        console.log('res', res)\n        if (res.status === 200 && res.data.ret_code >= 0) {\n          // 清除 badge \n          chrome.runtime.sendMessage({\n            type: 'SIGNJSONRETURN',\n            data: this.signJson\n          }, function (response) { })\n          // 向页面发送成功签名请求数据\n          this.sendMessageToContentScript({ msg: '同意了你的签名请求', type: 'SIGNDATARETURN', data: res.data, status: true }, (response) => {\n            console.log(response)\n          })\n          // 清除加载\n          Toast.clear()\n          // 跳转到钱包主页\n          this.$router.replace({\n            path: '/money-bag'\n          })\n        } else if (res.status === 200 && res.data.ret_code < 0) {\n          // 签名异常后\n          // 清除 badge \n          chrome.runtime.sendMessage({\n            type: 'SIGNJSONRETURN',\n            data: this.signJson\n          }, function (response) { })\n          // 向页面发送异常请求\n          this.sendMessageToContentScript({ msg: '你的签名请求异常', type: 'SIGNDATARETURN', status: false }, (response) => {\n            console.log(response)\n          })\n          // 提示异常信息\n          Toast.clear()\n          Toast(res.data.ret_message)\n        }\n      }).catch((err) => {\n        console.log(err)\n        Toast.clear()\n        // 向页面发送异常请求\n        this.sendMessageToContentScript({ msg: '你的签名请求失败', type: 'SIGNDATARETURN', status: false }, (response) => {\n          console.log(response)\n        })\n      })\n    },\n    getCurrentTabId (callback) {\n      chrome.tabs.query({ active: true }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      })\n    },\n    sendMessageToContentScript (message, callback) {\n      this.getCurrentTabId((tabId) => {\n        console.log(tabId, message)\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response)\n        });\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.signature {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  padding: 20px;\n  text-align: center;\n  h2 {\n    font-size: 32px;\n    font-family: STHeitiTC-Light;\n    font-weight: 500;\n    color: rgba(51, 76, 169, 1);\n    line-height: 40px;\n    margin-top: 100px;\n  }\n  p {\n    font-size: 20px;\n    font-family: PingFangSC;\n    font-weight: 300;\n    color: rgba(0, 0, 0, 0.55);\n    line-height: 60px;\n  }\n  .button {\n    margin-top: 180px;\n    button {\n      outline: none;\n      border: none;\n      text-align: center;\n      font-size: 16px;\n      font-family: PingFangSC-Light;\n      font-weight: 500;\n      color: rgba(51, 76, 169, 1);\n      width: 138px;\n      height: 44px;\n      border-radius: 4px;\n      letter-spacing: 4px;\n      border: 1px solid rgba(51, 76, 169, 1);\n      &.refuse {\n        background: none;\n      }\n      &.agree {\n        margin-left: 20px;\n        background: rgba(51, 76, 169, 1);\n        box-shadow: 0px 6px 20px 0px rgba(8, 21, 67, 0.26);\n        color: #fff;\n      }\n    }\n  }\n}\n</style>"],"sourceRoot":"src/views/signature"}]}