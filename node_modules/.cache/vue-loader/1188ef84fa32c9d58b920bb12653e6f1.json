{"remainingRequest":"/Users/will/Documents/finchain/2020/extension/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/will/Documents/finchain/2020/extension/src/views/create/CreateConfirm.vue?vue&type=style&index=0&id=6ff23315&lang=less&scoped=true&","dependencies":[{"path":"/Users/will/Documents/finchain/2020/extension/src/views/create/CreateConfirm.vue","mtime":1575276266590},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/less-loader/dist/cjs.js","mtime":1574850612789},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/will/Documents/finchain/2020/extension/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.confirm {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  padding: 20px;\n  .header {\n    font-size: 16px;\n    .van-icon-arrow-left {\n      cursor: pointer;\n      color: #516fea;\n    }\n  }\n  .title {\n    margin-top: 18px;\n    text-align: center;\n    h2 {\n      font-size: 18px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 24px;\n    }\n    p {\n      font-size: 14px;\n      margin-top: 6px;\n      font-family: PingFangSC-Light;\n      font-weight: 300;\n      color: rgba(0, 0, 0, 0.65);\n      line-height: 20px;\n    }\n  }\n  .error-msg {\n    height: 16px;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 12px;\n    font-family: PingFangSC-Regular;\n    font-weight: 400;\n    color: rgba(246, 34, 46, 1);\n    line-height: 16px;\n  }\n  .words {\n    width: 100%;\n    height: 138px;\n    margin-top: 18px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 76px;\n      height: 34px;\n      text-align: center;\n      background: rgba(51, 76, 169, 0.08);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 5px;\n      margin-top: 12px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .confirm-words {\n    width: 100%;\n    margin-top: 4px;\n    padding: 6px;\n    min-height: 166px;\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 4px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 74px;\n      height: 34px;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.04);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 4px;\n      margin-top: 13px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .button {\n    text-align: center;\n    margin-top: 40px;\n    .btn {\n      width: 283px;\n      height: 48px;\n      background: rgba(51, 76, 169, 1);\n      border-radius: 4px;\n      border: 1px solid rgba(51, 76, 169, 1);\n      font-size: 13px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(255, 255, 255, 1);\n    }\n  }\n}\n",{"version":3,"sources":["CreateConfirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateConfirm.vue","sourceRoot":"src/views/create","sourcesContent":["<template>\n  <div class=\"confirm\">\n    <div class=\"header\">\n      <van-icon @click=\"back\" name=\"arrow-left\" />\n    </div>\n    <div class=\"title\">\n      <h2>确认助记词</h2>\n      <p>请按顺序点击助记词，以确认您正确备份。</p>\n    </div>\n    <p class=\"error-msg\">{{errorMsg}}</p>\n    <ul class=\"confirm-words\">\n      <li v-for=\"(item, index) in confirmWords\" :key=\"index\" @click=\"confirmWordsClick(item, index)\">{{item.item}}</li>\n    </ul>\n    <ul class=\"words\">\n      <li v-for=\"(item, index) in words\" :key=\"index\" @click=\"wordsClick(index)\">{{item}}</li>\n    </ul>\n    <div class=\"button\">\n      <button class=\"btn\" @click=\"complete\">完成</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Toast } from 'vant'\nimport { userLogin, getBalance } from '@/api/create'\nimport { sendSignData } from '@/api/sign'\nexport default {\n  data () {\n    return {\n      errorMsg: '',\n      orginWords: [],\n      confirmWords: [],\n      words: []\n    }\n  },\n  created () {\n    // 回车事件\n    document.onkeyup = (e) => {\n      let key = window.event.keyCode\n      if (key === 13) {\n        this.complete()\n      }\n    }\n  },\n  mounted () {\n    let words = this.$route.params.mnemonic || []\n    this.orginWords = [...words]\n    this.words = this.disorde(words)\n  },\n  methods: {\n    // 下面助记词点击\n    wordsClick (i) {\n      let delItem = this.words.splice(i, 1)\n      this.confirmWords.push({ index: i, item: delItem[0] })\n    },\n    // 上面助记词点击\n    confirmWordsClick (val, i) {\n      this.confirmWords.splice(i, 1)\n      this.words.splice(val.index, 0, val.item)\n    },\n    // 数组乱序\n    disorde (arr) {\n      for (let i = arr.length - 1; i >= 0; i--) {\n        let rIndex = Math.floor(Math.random() * (i + 1));\n        let temp = arr[rIndex];\n        arr[rIndex] = arr[i];\n        arr[i] = temp;\n      }\n      return arr\n    },\n    // 回退\n    back () {\n      this.$router.go(-1)\n    },\n    // 完成\n    async complete () {\n      // 验证助记词\n      let confirmWords = this.confirmWords.map(v => {\n        return v.item\n      })\n      // 输入的助记词\n      let confirmWordsStr = confirmWords.join(' ')\n      // 原助记词\n      let mnemonicStr = this.orginWords.join(' ')\n      // TODO: !!!!!!!!!!!!!!!!!\n      if (confirmWordsStr !== mnemonicStr) {\n        this.errorMsg = '助记词顺序有误，请重新选择'\n        const timer = setInterval(() => {\n          this.errorMsg = ''\n          clearInterval(timer)\n        }, 1000)\n        return false\n      }\n      this.errorMsg = ''\n      // 获取密码\n      let pwd = ''\n      await this.$unit.getStorage('password').then((v) => {\n        pwd = v\n      })\n      // 获取用户名\n      let userName = ''\n      await this.$unit.getStorage('username').then((v) => {\n        userName = v\n      })\n      // 生成 keystore\n      let mnemonic = this.orginWords.join(' ')\n      // alert(mnemonic)\n      let base58 = this.$bip44.mnemonicToHDPrivateKey(mnemonic, null)\n      let pk = this.$bip44.getPrivateKey(base58, 0).toString('hex')\n      let obj = this.$cwv.KeyPair.genFromPrikey(pk)\n      console.log(obj)\n      let keystore = this.$cwv.keystore.exportJSON(obj, pwd)\n      console.log(keystore)\n      // this.sendRegister(obj.hexAddress)\n\n      // 注册钱包地址\n      let params = {\n        method: 'BrokerInfo',\n        from: obj.hexAddress,\n        jsbody: JSON.stringify({\n          uinfo: {\n            alias: userName\n          }\n        }),\n        refid: new Date() - 0\n      }\n      const recoverToast = Toast.loading({\n        duration: 0,\n        mask: true,\n        message: '创建中...'\n      })\n      var balance = 0\n      chrome.storage.local.set({\n                  keypair: obj,\n                  keystore,\n                  state: 'HAVE',\n                  balance,\n                }, function () {\n                })\n                chrome.extension.getBackgroundPage().GlobalState = 'OPEN'\n                this.sendMessageToContentScript({ msg: 'confirm -> content; 传递钱包地址', type: 'SENDMONEYADDRESS', data: { moneyAddress: obj.hexAddress, balance} }, (response) => {\n                  console.log(response)\n                })\n                Toast({\n                  duration: 1000,\n                  message: '创建身份成功！'\n                })\n                this.$router.replace({ name: 'login' })\n                return\n      userLogin(params).then((res) => {\n        if (res.status === 200 && res.data.ret_code === 0) {\n          // 注册返回data 进行签名\n          let ecHexSign = this.$cwv2.ecHexSign(obj.hexPrikey, res.data.hexdata)\n          console.log('ecHexSign', ecHexSign)\n          let params2 = {\n            signdata: ecHexSign,\n            method: res.data.method,\n            waitResp: true,\n            from: res.data.from,\n            hexdata: res.data.hexdata,\n            refid: res.data.refid,\n            resp_refid: res.data.resp_refid\n          }\n          console.log('send_sign', params2)\n          sendSignData(params2).then((res) => {\n            console.log('res', res)\n            if (res.status === 200 && res.data.ret_code >= 0) {\n              recoverToast.clear()\n              let balance = ''\n              getBalance({ address: obj.hexAddress }).then((res) => {\n                if (res.status === 200 && res.data.retCode < 0) {\n                  balance = 0\n                }\n                if (res.status === 200 && res.data.retCode >= 0) {\n                  console.log(res)\n                  if (res.data.account.value.hasOwnProperty(\"tokens\")) {\n                    let index = res.data.account.value.tokens.findIndex(v => {\n                      return v.token === \"AAA\"\n                    })\n                    if (index >= 0) {\n                      // balance = divide(res.data.account.value.tokens[index].balance, 10 ** 18)\n                      balance = (res.data.account.value.tokens[index].balance / 1000000000000000000).toFixed(0)\n                    }\n                  }\n                  else {\n                    balance = 0\n                  }\n                }\n                // 存储 keyStorage keyPair\n                chrome.storage.local.set({\n                  keypair: obj,\n                  keystore,\n                  state: 'HAVE',\n                  balance\n                }, function () {\n                })\n                chrome.extension.getBackgroundPage().GlobalState = 'OPEN'\n                this.sendMessageToContentScript({ msg: 'confirm -> content; 传递钱包地址', type: 'SENDMONEYADDRESS', data: { moneyAddress: obj.hexAddress, balance } }, (response) => {\n                  console.log(response)\n                })\n                Toast({\n                  duration: 1000,\n                  message: '创建身份成功！'\n                })\n                this.$router.replace({ name: 'login' })\n              }).catch((err) => {\n                console.log(err)\n              })\n            } else if (res.status === 200 && res.data.ret_code < 0) {\n              Toast({\n                duration: 1000,\n                message: res.data.ret_message\n              })\n            }\n          }).catch((err) => {\n            console.log(err)\n            Toast.clear()\n          })\n        } else {\n          recoverToast.clear()\n          Toast({\n            duration: 1000,\n            message: res.data.ret_message\n          })\n        }\n      }).catch((err) => {\n        recoverToast.clear()\n        Toast({\n          duration: 1000,\n          message: '注册信息失败'\n        })\n      })\n    },\n    // 发送信息给content_script\n    getCurrentTabId (callback) {\n      chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        if (callback) callback(tabs.length ? tabs[0].id : null);\n      })\n    },\n    sendMessageToContentScript (message, callback) {\n      this.getCurrentTabId((tabId) => {\n        chrome.tabs.sendMessage(tabId, message, function (response) {\n          if (callback) callback(response)\n        })\n      })\n    },\n    divide (num1, num2) {\n      const num1Changed = this.float2Fixed(num1)\n      const num2Changed = this.float2Fixed(num2)\n      return (num1Changed / num2Changed) * Math.pow(10, this.digitLength(num2) - this.digitLength(num1))\n    }\n\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.confirm {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  padding: 20px;\n  .header {\n    font-size: 16px;\n    .van-icon-arrow-left {\n      cursor: pointer;\n      color: #516fea;\n    }\n  }\n  .title {\n    margin-top: 18px;\n    text-align: center;\n    h2 {\n      font-size: 18px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 24px;\n    }\n    p {\n      font-size: 14px;\n      margin-top: 6px;\n      font-family: PingFangSC-Light;\n      font-weight: 300;\n      color: rgba(0, 0, 0, 0.65);\n      line-height: 20px;\n    }\n  }\n  .error-msg {\n    height: 16px;\n    margin-top: 10px;\n    text-align: center;\n    font-size: 12px;\n    font-family: PingFangSC-Regular;\n    font-weight: 400;\n    color: rgba(246, 34, 46, 1);\n    line-height: 16px;\n  }\n  .words {\n    width: 100%;\n    height: 138px;\n    margin-top: 18px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 76px;\n      height: 34px;\n      text-align: center;\n      background: rgba(51, 76, 169, 0.08);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 5px;\n      margin-top: 12px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .confirm-words {\n    width: 100%;\n    margin-top: 4px;\n    padding: 6px;\n    min-height: 166px;\n    background: rgba(0, 0, 0, 0.04);\n    border-radius: 4px;\n    li {\n      user-select: none;\n      display: inline-block;\n      width: 74px;\n      height: 34px;\n      text-align: center;\n      background: rgba(0, 0, 0, 0.04);\n      font-size: 14px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.85);\n      line-height: 32px;\n      margin-right: 4px;\n      margin-top: 13px;\n      &:nth-child(4n) {\n        margin-right: 0;\n      }\n    }\n  }\n  .button {\n    text-align: center;\n    margin-top: 40px;\n    .btn {\n      width: 283px;\n      height: 48px;\n      background: rgba(51, 76, 169, 1);\n      border-radius: 4px;\n      border: 1px solid rgba(51, 76, 169, 1);\n      font-size: 13px;\n      font-family: PingFangSC-Medium;\n      font-weight: 500;\n      color: rgba(255, 255, 255, 1);\n    }\n  }\n}\n</style>\n"]}]}